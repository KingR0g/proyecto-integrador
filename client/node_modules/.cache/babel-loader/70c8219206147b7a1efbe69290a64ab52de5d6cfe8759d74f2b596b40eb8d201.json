{"ast":null,"code":"var _jsxFileName = \"/Users/grettelleal/BOOTCAMP/RYMApp/rickandmortyapp/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport style from \"./App.module.css\";\nimport Cards from './components/Cards/Cards.jsx';\nimport Nav from './components/NavBar/Nav.jsx';\nimport axios from \"axios\";\n//aqui\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //   var characters = [] ASI NO ,  como  estado\n\n  //   const array = React.useState([]);        // que retorna esta function cuando la invoco? --> [1, 2,]\n  //   const state =  array[0]\n  //   const setState = array[1]\n\n  function onSearch(id) {\n    axios(`https://rickandmortyapi.com/api/character/${id}`).then(_ref => {\n      let {\n        data\n      } = _ref;\n      if (data.name) {\n        setCharacters(oldChars => [...oldChars, data]);\n      } else {}\n    }).catch(err => window.alert('¡No hay personajes con este ID!'));\n  }\n  function onClose() {\n    window.alert(\"onClose :)\");\n  }\n  const [characters, setCharacters] = useState([]); // [{}]  ---> [{}, {}]                \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.app,\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      onSearch: onSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Cards, {\n      characters: characters,\n      onClose: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"XYOUpNAi+Jhs2dnEwppRANg7X2I=\");\n_c = App;\nexport default App;\n\n// lo que tenemos con axios pero con fetch\n\n/* fetch(`https://rickandmortyapi.com/api/character/${id}`)\n.then(respuesta => respuesta.json())\n.then(({ respuestaJson }) => {\n   if (respuestaJson.data.name) {\n      setCharacters((oldChars) => [...oldChars, respuestaJson.data]);\n   } else {\n   }\n})\n   .catch((err) => window.alert('¡No hay personajes con este ID!'));\n */\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","style","Cards","Nav","axios","jsxDEV","_jsxDEV","App","_s","onSearch","id","then","_ref","data","name","setCharacters","oldChars","catch","err","window","alert","onClose","characters","className","app","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/grettelleal/BOOTCAMP/RYMApp/rickandmortyapp/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport style from \"./App.module.css\"\nimport Cards from './components/Cards/Cards.jsx';\nimport Nav from './components/NavBar/Nav.jsx';\nimport axios from \"axios\"\n//aqui\n\n\n\nfunction App() {\n\n//   var characters = [] ASI NO ,  como  estado\n\n//   const array = React.useState([]);        // que retorna esta function cuando la invoco? --> [1, 2,]\n//   const state =  array[0]\n//   const setState = array[1]\n\nfunction onSearch(id) {\n   axios(`https://rickandmortyapi.com/api/character/${id}`).then(({ data }) => {\n      if (data.name) {\n         setCharacters((oldChars) => [...oldChars, data]);\n      } else {\n      }\n   })\n      .catch((err) => window.alert('¡No hay personajes con este ID!'));\n}\n\nfunction onClose() {\n window.alert(\"onClose :)\")\n}\n\n   const [characters, setCharacters] = useState([]);     // [{}]  ---> [{}, {}]                \n\n   return (\n      <div className={style.app}>\n         <Nav onSearch={onSearch} />\n         <Cards characters={characters} onClose={onClose} />\n      </div>\n   );\n}\n\nexport default App;\n\n\n\n// lo que tenemos con axios pero con fetch\n\n/* fetch(`https://rickandmortyapi.com/api/character/${id}`)\n.then(respuesta => respuesta.json())\n.then(({ respuestaJson }) => {\n   if (respuestaJson.data.name) {\n      setCharacters((oldChars) => [...oldChars, respuestaJson.data]);\n   } else {\n   }\n})\n   .catch((err) => window.alert('¡No hay personajes con este ID!'));\n */"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,kBAAkB;AACpC,OAAOC,KAAK,MAAM,8BAA8B;AAChD,OAAOC,GAAG,MAAM,6BAA6B;AAC7C,OAAOC,KAAK,MAAM,OAAO;AACzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEf;;EAEA;EACA;EACA;;EAEA,SAASC,QAAQA,CAACC,EAAE,EAAE;IACnBN,KAAK,CAAE,6CAA4CM,EAAG,EAAC,CAAC,CAACC,IAAI,CAACC,IAAA,IAAc;MAAA,IAAb;QAAEC;MAAK,CAAC,GAAAD,IAAA;MACpE,IAAIC,IAAI,CAACC,IAAI,EAAE;QACZC,aAAa,CAAEC,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAEH,IAAI,CAAC,CAAC;MACnD,CAAC,MAAM,CACP;IACH,CAAC,CAAC,CACEI,KAAK,CAAEC,GAAG,IAAKC,MAAM,CAACC,KAAK,CAAC,iCAAiC,CAAC,CAAC;EACtE;EAEA,SAASC,OAAOA,CAAA,EAAG;IAClBF,MAAM,CAACC,KAAK,CAAC,YAAY,CAAC;EAC3B;EAEG,MAAM,CAACE,UAAU,EAAEP,aAAa,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAK;;EAEtD,oBACGM,OAAA;IAAKiB,SAAS,EAAEtB,KAAK,CAACuB,GAAI;IAAAC,QAAA,gBACvBnB,OAAA,CAACH,GAAG;MAACM,QAAQ,EAAEA;IAAS;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3BvB,OAAA,CAACJ,KAAK;MAACoB,UAAU,EAAEA,UAAW;MAACD,OAAO,EAAEA;IAAQ;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEZ;AAACrB,EAAA,CA9BQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAgCZ,eAAeA,GAAG;;AAIlB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}